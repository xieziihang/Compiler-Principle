// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

# 22 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | MAX
  | MIN
  | ABS
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | COLON
  | QUESTION
  | ASSIGN
  | AMP
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | SELFINC
  | SELFDEC
  | TIMES
  | DIV
  | MOD
  | PLUSASSIGN
  | MINUSASSIGN
  | MULTIPLYASSIGN
  | DIVASSIGN
  | CHAR
  | ELSE
  | IF
  | INT
  | BOOL
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | FOR
  | DOWHILE
  | DO
  | SWITCH
  | CASE
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_MAX
    | TOKEN_MIN
    | TOKEN_ABS
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_COLON
    | TOKEN_QUESTION
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_SELFINC
    | TOKEN_SELFDEC
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_PLUSASSIGN
    | TOKEN_MINUSASSIGN
    | TOKEN_MULTIPLYASSIGN
    | TOKEN_DIVASSIGN
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_BOOL
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FOR
    | TOKEN_DOWHILE
    | TOKEN_DO
    | TOKEN_SWITCH
    | TOKEN_CASE
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_CaseStmt
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | MAX  -> 1 
  | MIN  -> 2 
  | ABS  -> 3 
  | LPAR  -> 4 
  | RPAR  -> 5 
  | LBRACE  -> 6 
  | RBRACE  -> 7 
  | LBRACK  -> 8 
  | RBRACK  -> 9 
  | SEMI  -> 10 
  | COMMA  -> 11 
  | COLON  -> 12 
  | QUESTION  -> 13 
  | ASSIGN  -> 14 
  | AMP  -> 15 
  | NOT  -> 16 
  | SEQOR  -> 17 
  | SEQAND  -> 18 
  | EQ  -> 19 
  | NE  -> 20 
  | GT  -> 21 
  | LT  -> 22 
  | GE  -> 23 
  | LE  -> 24 
  | PLUS  -> 25 
  | MINUS  -> 26 
  | SELFINC  -> 27 
  | SELFDEC  -> 28 
  | TIMES  -> 29 
  | DIV  -> 30 
  | MOD  -> 31 
  | PLUSASSIGN  -> 32 
  | MINUSASSIGN  -> 33 
  | MULTIPLYASSIGN  -> 34 
  | DIVASSIGN  -> 35 
  | CHAR  -> 36 
  | ELSE  -> 37 
  | IF  -> 38 
  | INT  -> 39 
  | BOOL  -> 40 
  | NULL  -> 41 
  | PRINT  -> 42 
  | PRINTLN  -> 43 
  | RETURN  -> 44 
  | VOID  -> 45 
  | WHILE  -> 46 
  | FOR  -> 47 
  | DOWHILE  -> 48 
  | DO  -> 49 
  | SWITCH  -> 50 
  | CASE  -> 51 
  | CSTSTRING _ -> 52 
  | NAME _ -> 53 
  | CSTINT _ -> 54 
  | CSTBOOL _ -> 55 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_MAX 
  | 2 -> TOKEN_MIN 
  | 3 -> TOKEN_ABS 
  | 4 -> TOKEN_LPAR 
  | 5 -> TOKEN_RPAR 
  | 6 -> TOKEN_LBRACE 
  | 7 -> TOKEN_RBRACE 
  | 8 -> TOKEN_LBRACK 
  | 9 -> TOKEN_RBRACK 
  | 10 -> TOKEN_SEMI 
  | 11 -> TOKEN_COMMA 
  | 12 -> TOKEN_COLON 
  | 13 -> TOKEN_QUESTION 
  | 14 -> TOKEN_ASSIGN 
  | 15 -> TOKEN_AMP 
  | 16 -> TOKEN_NOT 
  | 17 -> TOKEN_SEQOR 
  | 18 -> TOKEN_SEQAND 
  | 19 -> TOKEN_EQ 
  | 20 -> TOKEN_NE 
  | 21 -> TOKEN_GT 
  | 22 -> TOKEN_LT 
  | 23 -> TOKEN_GE 
  | 24 -> TOKEN_LE 
  | 25 -> TOKEN_PLUS 
  | 26 -> TOKEN_MINUS 
  | 27 -> TOKEN_SELFINC 
  | 28 -> TOKEN_SELFDEC 
  | 29 -> TOKEN_TIMES 
  | 30 -> TOKEN_DIV 
  | 31 -> TOKEN_MOD 
  | 32 -> TOKEN_PLUSASSIGN 
  | 33 -> TOKEN_MINUSASSIGN 
  | 34 -> TOKEN_MULTIPLYASSIGN 
  | 35 -> TOKEN_DIVASSIGN 
  | 36 -> TOKEN_CHAR 
  | 37 -> TOKEN_ELSE 
  | 38 -> TOKEN_IF 
  | 39 -> TOKEN_INT 
  | 40 -> TOKEN_BOOL 
  | 41 -> TOKEN_NULL 
  | 42 -> TOKEN_PRINT 
  | 43 -> TOKEN_PRINTLN 
  | 44 -> TOKEN_RETURN 
  | 45 -> TOKEN_VOID 
  | 46 -> TOKEN_WHILE 
  | 47 -> TOKEN_FOR 
  | 48 -> TOKEN_DOWHILE 
  | 49 -> TOKEN_DO 
  | 50 -> TOKEN_SWITCH 
  | 51 -> TOKEN_CASE 
  | 52 -> TOKEN_CSTSTRING 
  | 53 -> TOKEN_NAME 
  | 54 -> TOKEN_CSTINT 
  | 55 -> TOKEN_CSTBOOL 
  | 58 -> TOKEN_end_of_input
  | 56 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Vardec 
    | 7 -> NONTERM_Vardesc 
    | 8 -> NONTERM_Vardesc 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Fundec 
    | 13 -> NONTERM_Fundec 
    | 14 -> NONTERM_Paramdecs 
    | 15 -> NONTERM_Paramdecs 
    | 16 -> NONTERM_Paramdecs1 
    | 17 -> NONTERM_Paramdecs1 
    | 18 -> NONTERM_Block 
    | 19 -> NONTERM_StmtOrDecSeq 
    | 20 -> NONTERM_StmtOrDecSeq 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_Stmt 
    | 23 -> NONTERM_Stmt 
    | 24 -> NONTERM_StmtM 
    | 25 -> NONTERM_StmtM 
    | 26 -> NONTERM_StmtM 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_CaseStmt 
    | 34 -> NONTERM_CaseStmt 
    | 35 -> NONTERM_StmtU 
    | 36 -> NONTERM_StmtU 
    | 37 -> NONTERM_StmtU 
    | 38 -> NONTERM_Expr 
    | 39 -> NONTERM_Expr 
    | 40 -> NONTERM_ExprNotAccess 
    | 41 -> NONTERM_ExprNotAccess 
    | 42 -> NONTERM_ExprNotAccess 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_ExprNotAccess 
    | 68 -> NONTERM_ExprNotAccess 
    | 69 -> NONTERM_ExprNotAccess 
    | 70 -> NONTERM_ExprNotAccess 
    | 71 -> NONTERM_AtExprNotAccess 
    | 72 -> NONTERM_AtExprNotAccess 
    | 73 -> NONTERM_AtExprNotAccess 
    | 74 -> NONTERM_Access 
    | 75 -> NONTERM_Access 
    | 76 -> NONTERM_Access 
    | 77 -> NONTERM_Access 
    | 78 -> NONTERM_Access 
    | 79 -> NONTERM_Exprs 
    | 80 -> NONTERM_Exprs 
    | 81 -> NONTERM_Exprs1 
    | 82 -> NONTERM_Exprs1 
    | 83 -> NONTERM_Const 
    | 84 -> NONTERM_Const 
    | 85 -> NONTERM_Const 
    | 86 -> NONTERM_Const 
    | 87 -> NONTERM_Type 
    | 88 -> NONTERM_Type 
    | 89 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 58 
let _fsyacc_tagOfErrorTerminal = 56

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | MAX  -> "MAX" 
  | MIN  -> "MIN" 
  | ABS  -> "ABS" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | COLON  -> "COLON" 
  | QUESTION  -> "QUESTION" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | SELFINC  -> "SELFINC" 
  | SELFDEC  -> "SELFDEC" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | PLUSASSIGN  -> "PLUSASSIGN" 
  | MINUSASSIGN  -> "MINUSASSIGN" 
  | MULTIPLYASSIGN  -> "MULTIPLYASSIGN" 
  | DIVASSIGN  -> "DIVASSIGN" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | BOOL  -> "BOOL" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FOR  -> "FOR" 
  | DOWHILE  -> "DOWHILE" 
  | DO  -> "DO" 
  | SWITCH  -> "SWITCH" 
  | CASE  -> "CASE" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | MAX  -> (null : System.Object) 
  | MIN  -> (null : System.Object) 
  | ABS  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | QUESTION  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | SELFINC  -> (null : System.Object) 
  | SELFDEC  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | PLUSASSIGN  -> (null : System.Object) 
  | MINUSASSIGN  -> (null : System.Object) 
  | MULTIPLYASSIGN  -> (null : System.Object) 
  | DIVASSIGN  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | BOOL  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | DOWHILE  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 8us; 65535us; 0us; 6us; 4us; 6us; 25us; 34us; 29us; 34us; 35us; 34us; 37us; 42us; 40us; 42us; 43us; 42us; 4us; 65535us; 9us; 11us; 10us; 11us; 14us; 15us; 16us; 17us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 25us; 26us; 29us; 30us; 3us; 65535us; 25us; 33us; 29us; 33us; 35us; 36us; 14us; 65535us; 27us; 28us; 31us; 32us; 37us; 54us; 40us; 54us; 43us; 54us; 61us; 54us; 62us; 54us; 64us; 54us; 65us; 54us; 73us; 54us; 74us; 54us; 83us; 54us; 85us; 54us; 101us; 54us; 3us; 65535us; 37us; 38us; 40us; 41us; 43us; 44us; 4us; 65535us; 37us; 40us; 40us; 40us; 43us; 40us; 62us; 105us; 12us; 65535us; 37us; 45us; 40us; 45us; 43us; 45us; 61us; 63us; 62us; 46us; 64us; 66us; 65us; 66us; 73us; 75us; 74us; 75us; 83us; 84us; 85us; 86us; 101us; 102us; 2us; 65535us; 96us; 97us; 102us; 103us; 6us; 65535us; 37us; 47us; 40us; 47us; 43us; 47us; 62us; 47us; 65us; 104us; 74us; 106us; 54us; 65535us; 37us; 48us; 40us; 48us; 43us; 48us; 50us; 52us; 57us; 60us; 58us; 59us; 61us; 48us; 62us; 48us; 64us; 48us; 65us; 48us; 69us; 72us; 70us; 71us; 73us; 48us; 74us; 48us; 77us; 78us; 79us; 80us; 81us; 82us; 83us; 48us; 85us; 48us; 88us; 89us; 93us; 94us; 101us; 48us; 118us; 119us; 121us; 155us; 124us; 125us; 126us; 127us; 156us; 129us; 157us; 130us; 158us; 131us; 159us; 132us; 160us; 133us; 161us; 134us; 162us; 135us; 163us; 136us; 164us; 137us; 165us; 138us; 166us; 139us; 167us; 140us; 168us; 141us; 169us; 142us; 170us; 143us; 171us; 144us; 172us; 145us; 173us; 146us; 174us; 148us; 176us; 149us; 177us; 150us; 180us; 151us; 181us; 152us; 184us; 153us; 187us; 147us; 188us; 147us; 199us; 154us; 202us; 155us; 54us; 65535us; 37us; 109us; 40us; 109us; 43us; 109us; 50us; 109us; 57us; 109us; 58us; 109us; 61us; 109us; 62us; 109us; 64us; 109us; 65us; 109us; 69us; 109us; 70us; 109us; 73us; 109us; 74us; 109us; 77us; 109us; 79us; 109us; 81us; 109us; 83us; 109us; 85us; 109us; 88us; 109us; 93us; 109us; 101us; 109us; 118us; 109us; 121us; 109us; 124us; 109us; 126us; 109us; 156us; 109us; 157us; 109us; 158us; 109us; 159us; 109us; 160us; 109us; 161us; 109us; 162us; 109us; 163us; 109us; 164us; 109us; 165us; 109us; 166us; 109us; 167us; 109us; 168us; 109us; 169us; 109us; 170us; 109us; 171us; 109us; 172us; 109us; 173us; 109us; 174us; 109us; 176us; 109us; 177us; 109us; 180us; 109us; 181us; 109us; 184us; 109us; 187us; 110us; 188us; 110us; 199us; 109us; 202us; 109us; 56us; 65535us; 37us; 111us; 40us; 111us; 43us; 111us; 50us; 111us; 57us; 111us; 58us; 111us; 61us; 111us; 62us; 111us; 64us; 111us; 65us; 111us; 69us; 111us; 70us; 111us; 73us; 111us; 74us; 111us; 77us; 111us; 79us; 111us; 81us; 111us; 83us; 111us; 85us; 111us; 88us; 111us; 93us; 111us; 99us; 100us; 101us; 111us; 118us; 111us; 121us; 111us; 124us; 111us; 126us; 111us; 156us; 111us; 157us; 111us; 158us; 111us; 159us; 111us; 160us; 111us; 161us; 111us; 162us; 111us; 163us; 111us; 164us; 111us; 165us; 111us; 166us; 111us; 167us; 111us; 168us; 111us; 169us; 111us; 170us; 111us; 171us; 111us; 172us; 111us; 173us; 111us; 174us; 111us; 176us; 111us; 177us; 111us; 180us; 111us; 181us; 111us; 184us; 111us; 187us; 111us; 188us; 111us; 196us; 198us; 199us; 111us; 202us; 111us; 59us; 65535us; 37us; 108us; 40us; 108us; 43us; 108us; 50us; 108us; 57us; 108us; 58us; 108us; 61us; 108us; 62us; 108us; 64us; 108us; 65us; 108us; 69us; 108us; 70us; 108us; 73us; 108us; 74us; 108us; 77us; 108us; 79us; 108us; 81us; 108us; 83us; 108us; 85us; 108us; 88us; 108us; 93us; 108us; 101us; 108us; 114us; 115us; 116us; 117us; 118us; 108us; 121us; 108us; 124us; 108us; 126us; 108us; 156us; 108us; 157us; 108us; 158us; 108us; 159us; 108us; 160us; 108us; 161us; 108us; 162us; 108us; 163us; 108us; 164us; 108us; 165us; 108us; 166us; 108us; 167us; 108us; 168us; 108us; 169us; 108us; 170us; 108us; 171us; 108us; 172us; 108us; 173us; 108us; 174us; 108us; 176us; 108us; 177us; 108us; 180us; 108us; 181us; 108us; 184us; 108us; 187us; 108us; 188us; 107us; 190us; 191us; 193us; 194us; 196us; 197us; 199us; 108us; 202us; 108us; 1us; 65535us; 121us; 122us; 2us; 65535us; 121us; 201us; 202us; 203us; 56us; 65535us; 37us; 186us; 40us; 186us; 43us; 186us; 50us; 186us; 57us; 186us; 58us; 186us; 61us; 186us; 62us; 186us; 64us; 186us; 65us; 186us; 69us; 186us; 70us; 186us; 73us; 186us; 74us; 186us; 77us; 186us; 79us; 186us; 81us; 186us; 83us; 186us; 85us; 186us; 88us; 186us; 93us; 186us; 99us; 186us; 101us; 186us; 118us; 186us; 121us; 186us; 124us; 186us; 126us; 186us; 156us; 186us; 157us; 186us; 158us; 186us; 159us; 186us; 160us; 186us; 161us; 186us; 162us; 186us; 163us; 186us; 164us; 186us; 165us; 186us; 166us; 186us; 167us; 186us; 168us; 186us; 169us; 186us; 170us; 186us; 171us; 186us; 172us; 186us; 173us; 186us; 174us; 186us; 176us; 186us; 177us; 186us; 180us; 186us; 181us; 186us; 184us; 186us; 187us; 186us; 188us; 186us; 196us; 186us; 199us; 186us; 202us; 186us; 8us; 65535us; 0us; 10us; 4us; 10us; 25us; 9us; 29us; 9us; 35us; 9us; 37us; 9us; 40us; 9us; 43us; 9us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 18us; 23us; 26us; 29us; 33us; 48us; 52us; 57us; 70us; 73us; 80us; 135us; 190us; 247us; 307us; 309us; 312us; 369us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 2us; 6us; 13us; 3us; 6us; 10us; 11us; 1us; 7us; 2us; 7us; 13us; 1us; 8us; 3us; 8us; 10us; 11us; 1us; 9us; 3us; 9us; 10us; 11us; 1us; 9us; 2us; 10us; 11us; 1us; 10us; 1us; 11us; 1us; 11us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 15us; 2us; 16us; 17us; 1us; 17us; 1us; 17us; 1us; 18us; 1us; 18us; 1us; 18us; 1us; 20us; 1us; 20us; 1us; 21us; 1us; 21us; 1us; 21us; 1us; 22us; 3us; 22us; 28us; 35us; 1us; 23us; 15us; 24us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 1us; 24us; 2us; 25us; 26us; 1us; 25us; 15us; 26us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 1us; 26us; 1us; 27us; 1us; 28us; 3us; 28us; 35us; 36us; 1us; 28us; 3us; 28us; 35us; 36us; 17us; 28us; 35us; 36us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 15us; 28us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 1us; 28us; 3us; 28us; 35us; 36us; 1us; 28us; 1us; 28us; 2us; 28us; 35us; 1us; 28us; 1us; 29us; 2us; 29us; 37us; 1us; 29us; 2us; 29us; 37us; 16us; 29us; 37us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 15us; 29us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 1us; 29us; 2us; 29us; 37us; 1us; 29us; 1us; 30us; 1us; 30us; 15us; 30us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 1us; 30us; 15us; 30us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 1us; 30us; 15us; 30us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 1us; 30us; 1us; 30us; 1us; 31us; 1us; 31us; 1us; 31us; 1us; 31us; 15us; 31us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 1us; 31us; 1us; 31us; 1us; 32us; 1us; 32us; 15us; 32us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 1us; 32us; 1us; 32us; 1us; 32us; 1us; 32us; 2us; 33us; 34us; 2us; 33us; 34us; 2us; 33us; 34us; 2us; 33us; 34us; 1us; 34us; 1us; 35us; 1us; 36us; 1us; 37us; 10us; 38us; 41us; 42us; 45us; 55us; 56us; 57us; 58us; 75us; 78us; 9us; 38us; 41us; 42us; 45us; 55us; 56us; 57us; 58us; 78us; 1us; 39us; 2us; 39us; 72us; 1us; 40us; 1us; 41us; 1us; 42us; 1us; 43us; 2us; 43us; 78us; 1us; 44us; 2us; 44us; 78us; 1us; 45us; 15us; 45us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 2us; 46us; 74us; 1us; 46us; 1us; 46us; 1us; 46us; 1us; 47us; 15us; 47us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 1us; 48us; 15us; 48us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 1us; 49us; 15us; 50us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 15us; 50us; 51us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 15us; 50us; 51us; 52us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 15us; 50us; 51us; 52us; 53us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 15us; 50us; 51us; 52us; 53us; 54us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 15us; 50us; 51us; 52us; 53us; 54us; 56us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 15us; 50us; 51us; 52us; 53us; 54us; 57us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 15us; 50us; 51us; 52us; 53us; 54us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 15us; 50us; 51us; 52us; 53us; 54us; 59us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 15us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 15us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 15us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 62us; 63us; 64us; 65us; 66us; 67us; 15us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 63us; 64us; 65us; 66us; 67us; 15us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 64us; 65us; 66us; 67us; 15us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 65us; 66us; 67us; 15us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 65us; 66us; 67us; 15us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 66us; 67us; 14us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 15us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 67us; 15us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 15us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 68us; 15us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 69us; 15us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 69us; 15us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 70us; 15us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 78us; 16us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 81us; 82us; 1us; 50us; 1us; 51us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 68us; 1us; 68us; 1us; 68us; 1us; 68us; 1us; 69us; 1us; 69us; 1us; 69us; 1us; 69us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 71us; 1us; 72us; 2us; 72us; 75us; 1us; 72us; 1us; 73us; 2us; 73us; 78us; 1us; 74us; 1us; 75us; 2us; 75us; 78us; 1us; 75us; 2us; 76us; 77us; 2us; 76us; 78us; 1us; 77us; 1us; 78us; 1us; 78us; 1us; 80us; 1us; 82us; 1us; 82us; 1us; 83us; 1us; 84us; 1us; 85us; 1us; 85us; 1us; 86us; 1us; 87us; 1us; 88us; 1us; 89us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 23us; 27us; 29us; 32us; 34us; 38us; 40us; 44us; 46us; 49us; 51us; 53us; 55us; 57us; 59us; 61us; 63us; 65us; 67us; 69us; 71us; 73us; 75us; 77us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 106us; 108us; 124us; 126us; 129us; 131us; 147us; 149us; 151us; 153us; 157us; 159us; 163us; 181us; 197us; 199us; 203us; 205us; 207us; 210us; 212us; 214us; 217us; 219us; 222us; 239us; 255us; 257us; 260us; 262us; 264us; 266us; 282us; 284us; 300us; 302us; 318us; 320us; 322us; 324us; 326us; 328us; 330us; 346us; 348us; 350us; 352us; 354us; 370us; 372us; 374us; 376us; 378us; 381us; 384us; 387us; 390us; 392us; 394us; 396us; 398us; 409us; 419us; 421us; 424us; 426us; 428us; 430us; 432us; 435us; 437us; 440us; 442us; 458us; 461us; 463us; 465us; 467us; 469us; 485us; 487us; 503us; 505us; 521us; 537us; 553us; 569us; 585us; 601us; 617us; 633us; 649us; 665us; 681us; 697us; 713us; 729us; 745us; 761us; 777us; 793us; 808us; 824us; 840us; 856us; 872us; 888us; 904us; 920us; 937us; 939us; 941us; 943us; 945us; 947us; 949us; 951us; 953us; 955us; 957us; 959us; 961us; 963us; 965us; 967us; 969us; 971us; 973us; 975us; 977us; 979us; 981us; 983us; 985us; 987us; 989us; 991us; 993us; 995us; 997us; 999us; 1001us; 1004us; 1006us; 1008us; 1011us; 1013us; 1015us; 1018us; 1020us; 1023us; 1026us; 1028us; 1030us; 1032us; 1034us; 1036us; 1038us; 1040us; 1042us; 1044us; 1046us; 1048us; 1050us; 1052us; |]
let _fsyacc_action_rows = 212
let _fsyacc_actionTableElements = [|4us; 16386us; 36us; 210us; 39us; 209us; 40us; 211us; 45us; 23us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 4us; 16386us; 36us; 210us; 39us; 209us; 40us; 211us; 45us; 23us; 0us; 16387us; 1us; 32768us; 10us; 7us; 0us; 16388us; 0us; 16389us; 3us; 32768us; 4us; 16us; 29us; 14us; 53us; 12us; 3us; 32768us; 4us; 16us; 29us; 14us; 53us; 13us; 1us; 16390us; 8us; 19us; 0us; 16391us; 1us; 16391us; 4us; 29us; 3us; 32768us; 4us; 16us; 29us; 14us; 53us; 12us; 1us; 16392us; 8us; 19us; 3us; 32768us; 4us; 16us; 29us; 14us; 53us; 12us; 2us; 32768us; 5us; 18us; 8us; 19us; 0us; 16393us; 2us; 32768us; 9us; 20us; 54us; 21us; 0us; 16394us; 1us; 32768us; 9us; 22us; 0us; 16395us; 1us; 32768us; 53us; 24us; 1us; 32768us; 4us; 25us; 3us; 16398us; 36us; 210us; 39us; 209us; 40us; 211us; 1us; 32768us; 5us; 27us; 1us; 32768us; 6us; 37us; 0us; 16396us; 3us; 16398us; 36us; 210us; 39us; 209us; 40us; 211us; 1us; 32768us; 5us; 31us; 1us; 32768us; 6us; 37us; 0us; 16397us; 0us; 16399us; 1us; 16400us; 11us; 35us; 3us; 32768us; 36us; 210us; 39us; 209us; 40us; 211us; 0us; 16401us; 26us; 16403us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 6us; 37us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 36us; 210us; 38us; 56us; 39us; 209us; 40us; 211us; 41us; 208us; 42us; 126us; 43us; 128us; 44us; 50us; 46us; 68us; 47us; 76us; 49us; 85us; 50us; 92us; 53us; 120us; 54us; 204us; 55us; 205us; 1us; 32768us; 7us; 39us; 0us; 16402us; 26us; 16403us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 6us; 37us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 36us; 210us; 38us; 56us; 39us; 209us; 40us; 211us; 41us; 208us; 42us; 126us; 43us; 128us; 44us; 50us; 46us; 68us; 47us; 76us; 49us; 85us; 50us; 92us; 53us; 120us; 54us; 204us; 55us; 205us; 0us; 16404us; 1us; 32768us; 10us; 43us; 26us; 16403us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 6us; 37us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 36us; 210us; 38us; 56us; 39us; 209us; 40us; 211us; 41us; 208us; 42us; 126us; 43us; 128us; 44us; 50us; 46us; 68us; 47us; 76us; 49us; 85us; 50us; 92us; 53us; 120us; 54us; 204us; 55us; 205us; 0us; 16405us; 0us; 16406us; 1us; 16406us; 37us; 65us; 0us; 16407us; 15us; 32768us; 10us; 49us; 13us; 171us; 17us; 174us; 18us; 173us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 0us; 16408us; 17us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 10us; 51us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 0us; 16409us; 15us; 32768us; 10us; 53us; 13us; 171us; 17us; 174us; 18us; 173us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 0us; 16410us; 0us; 16411us; 1us; 32768us; 4us; 57us; 1us; 32768us; 4us; 58us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 15us; 32768us; 5us; 62us; 13us; 171us; 17us; 174us; 18us; 173us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 15us; 32768us; 5us; 61us; 13us; 171us; 17us; 174us; 18us; 173us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 23us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 6us; 37us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 38us; 55us; 41us; 208us; 42us; 126us; 43us; 128us; 44us; 50us; 46us; 67us; 47us; 76us; 49us; 85us; 50us; 92us; 53us; 120us; 54us; 204us; 55us; 205us; 23us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 6us; 37us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 38us; 56us; 41us; 208us; 42us; 126us; 43us; 128us; 44us; 50us; 46us; 68us; 47us; 76us; 49us; 85us; 50us; 92us; 53us; 120us; 54us; 204us; 55us; 205us; 1us; 32768us; 37us; 64us; 23us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 6us; 37us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 38us; 55us; 41us; 208us; 42us; 126us; 43us; 128us; 44us; 50us; 46us; 67us; 47us; 76us; 49us; 85us; 50us; 92us; 53us; 120us; 54us; 204us; 55us; 205us; 23us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 6us; 37us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 38us; 56us; 41us; 208us; 42us; 126us; 43us; 128us; 44us; 50us; 46us; 68us; 47us; 76us; 49us; 85us; 50us; 92us; 53us; 120us; 54us; 204us; 55us; 205us; 0us; 16412us; 1us; 32768us; 4us; 69us; 1us; 32768us; 4us; 70us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 15us; 32768us; 5us; 74us; 13us; 171us; 17us; 174us; 18us; 173us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 15us; 32768us; 5us; 73us; 13us; 171us; 17us; 174us; 18us; 173us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 23us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 6us; 37us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 38us; 55us; 41us; 208us; 42us; 126us; 43us; 128us; 44us; 50us; 46us; 67us; 47us; 76us; 49us; 85us; 50us; 92us; 53us; 120us; 54us; 204us; 55us; 205us; 23us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 6us; 37us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 38us; 56us; 41us; 208us; 42us; 126us; 43us; 128us; 44us; 50us; 46us; 68us; 47us; 76us; 49us; 85us; 50us; 92us; 53us; 120us; 54us; 204us; 55us; 205us; 0us; 16413us; 1us; 32768us; 4us; 77us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 15us; 32768us; 10us; 79us; 13us; 171us; 17us; 174us; 18us; 173us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 15us; 32768us; 10us; 81us; 13us; 171us; 17us; 174us; 18us; 173us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 15us; 32768us; 5us; 83us; 13us; 171us; 17us; 174us; 18us; 173us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 23us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 6us; 37us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 38us; 55us; 41us; 208us; 42us; 126us; 43us; 128us; 44us; 50us; 46us; 67us; 47us; 76us; 49us; 85us; 50us; 92us; 53us; 120us; 54us; 204us; 55us; 205us; 0us; 16414us; 23us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 6us; 37us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 38us; 55us; 41us; 208us; 42us; 126us; 43us; 128us; 44us; 50us; 46us; 67us; 47us; 76us; 49us; 85us; 50us; 92us; 53us; 120us; 54us; 204us; 55us; 205us; 1us; 32768us; 46us; 87us; 1us; 32768us; 4us; 88us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 15us; 32768us; 5us; 90us; 13us; 171us; 17us; 174us; 18us; 173us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 1us; 32768us; 10us; 91us; 0us; 16415us; 1us; 32768us; 4us; 93us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 15us; 32768us; 5us; 95us; 13us; 171us; 17us; 174us; 18us; 173us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 1us; 32768us; 6us; 96us; 1us; 32768us; 51us; 99us; 1us; 32768us; 7us; 98us; 0us; 16416us; 6us; 32768us; 4us; 187us; 15us; 190us; 26us; 206us; 41us; 208us; 54us; 204us; 55us; 205us; 1us; 32768us; 12us; 101us; 23us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 6us; 37us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 38us; 55us; 41us; 208us; 42us; 126us; 43us; 128us; 44us; 50us; 46us; 67us; 47us; 76us; 49us; 85us; 50us; 92us; 53us; 120us; 54us; 204us; 55us; 205us; 1us; 16417us; 51us; 99us; 0us; 16418us; 0us; 16419us; 0us; 16420us; 0us; 16421us; 9us; 16422us; 5us; 195us; 8us; 199us; 14us; 118us; 27us; 112us; 28us; 113us; 32us; 161us; 33us; 162us; 34us; 164us; 35us; 163us; 8us; 16422us; 8us; 199us; 14us; 118us; 27us; 112us; 28us; 113us; 32us; 161us; 33us; 162us; 34us; 164us; 35us; 163us; 0us; 16423us; 1us; 16423us; 5us; 189us; 0us; 16424us; 0us; 16425us; 0us; 16426us; 3us; 32768us; 4us; 193us; 29us; 196us; 53us; 192us; 1us; 16427us; 8us; 199us; 3us; 32768us; 4us; 193us; 29us; 196us; 53us; 192us; 1us; 16428us; 8us; 199us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 14us; 16429us; 13us; 171us; 17us; 174us; 18us; 173us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 1us; 16458us; 4us; 121us; 16us; 16463us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 1us; 32768us; 5us; 123us; 0us; 16430us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 0us; 16431us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 14us; 16432us; 13us; 171us; 17us; 174us; 18us; 173us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 0us; 16433us; 3us; 16434us; 29us; 158us; 30us; 159us; 31us; 160us; 3us; 16435us; 29us; 158us; 30us; 159us; 31us; 160us; 0us; 16436us; 0us; 16437us; 0us; 16438us; 14us; 16439us; 13us; 171us; 17us; 174us; 18us; 173us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 14us; 16440us; 13us; 171us; 17us; 174us; 18us; 173us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 14us; 16441us; 13us; 171us; 17us; 174us; 18us; 173us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 14us; 16442us; 13us; 171us; 17us; 174us; 18us; 173us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 9us; 16443us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 9us; 16444us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 9us; 16445us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 9us; 16446us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 9us; 16447us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 9us; 16448us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 15us; 32768us; 12us; 172us; 13us; 171us; 17us; 174us; 18us; 173us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 13us; 16449us; 17us; 174us; 18us; 173us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 11us; 16450us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 14us; 32768us; 13us; 171us; 17us; 174us; 18us; 173us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 12us; 16451us; 18us; 173us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 15us; 32768us; 11us; 177us; 13us; 171us; 17us; 174us; 18us; 173us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 15us; 32768us; 5us; 178us; 13us; 171us; 17us; 174us; 18us; 173us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 15us; 32768us; 11us; 181us; 13us; 171us; 17us; 174us; 18us; 173us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 15us; 32768us; 5us; 182us; 13us; 171us; 17us; 174us; 18us; 173us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 15us; 32768us; 5us; 185us; 13us; 171us; 17us; 174us; 18us; 173us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 15us; 32768us; 9us; 200us; 13us; 171us; 17us; 174us; 18us; 173us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 15us; 16465us; 11us; 202us; 13us; 171us; 17us; 174us; 18us; 173us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 168us; 23us; 169us; 24us; 170us; 25us; 156us; 26us; 157us; 29us; 158us; 30us; 159us; 31us; 160us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 1us; 32768us; 4us; 176us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 0us; 16452us; 1us; 32768us; 4us; 180us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 0us; 16453us; 1us; 32768us; 4us; 184us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 0us; 16454us; 0us; 16455us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 0us; 16456us; 3us; 32768us; 4us; 193us; 29us; 196us; 53us; 192us; 1us; 16457us; 8us; 199us; 0us; 16458us; 3us; 32768us; 4us; 193us; 29us; 196us; 53us; 192us; 2us; 32768us; 5us; 195us; 8us; 199us; 0us; 16459us; 8us; 32768us; 4us; 188us; 15us; 190us; 26us; 206us; 29us; 196us; 41us; 208us; 53us; 192us; 54us; 204us; 55us; 205us; 1us; 16460us; 8us; 199us; 0us; 16461us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 0us; 16462us; 0us; 16464us; 16us; 32768us; 1us; 175us; 2us; 179us; 3us; 183us; 4us; 188us; 15us; 190us; 16us; 124us; 26us; 206us; 27us; 114us; 28us; 116us; 29us; 196us; 41us; 208us; 42us; 126us; 43us; 128us; 53us; 120us; 54us; 204us; 55us; 205us; 0us; 16466us; 0us; 16467us; 0us; 16468us; 1us; 32768us; 54us; 207us; 0us; 16469us; 0us; 16470us; 0us; 16471us; 0us; 16472us; 0us; 16473us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 5us; 6us; 8us; 9us; 14us; 15us; 17us; 18us; 19us; 23us; 27us; 29us; 30us; 32us; 36us; 38us; 42us; 45us; 46us; 49us; 50us; 52us; 53us; 55us; 57us; 61us; 63us; 65us; 66us; 70us; 72us; 74us; 75us; 76us; 78us; 82us; 83us; 110us; 112us; 113us; 140us; 141us; 143us; 170us; 171us; 172us; 174us; 175us; 191us; 192us; 210us; 211us; 227us; 228us; 229us; 231us; 233us; 250us; 267us; 283us; 299us; 323us; 347us; 349us; 373us; 397us; 398us; 400us; 402us; 419us; 436us; 452us; 468us; 492us; 516us; 517us; 519us; 536us; 552us; 569us; 585us; 602us; 618us; 642us; 643us; 667us; 669us; 671us; 688us; 704us; 706us; 707us; 709us; 726us; 742us; 744us; 746us; 748us; 749us; 756us; 758us; 782us; 784us; 785us; 786us; 787us; 788us; 798us; 807us; 808us; 810us; 811us; 812us; 813us; 817us; 819us; 823us; 825us; 842us; 857us; 859us; 876us; 878us; 879us; 896us; 897us; 914us; 929us; 930us; 934us; 938us; 939us; 940us; 941us; 956us; 971us; 986us; 1001us; 1011us; 1021us; 1031us; 1041us; 1051us; 1061us; 1077us; 1091us; 1103us; 1118us; 1131us; 1147us; 1163us; 1179us; 1195us; 1211us; 1227us; 1243us; 1260us; 1277us; 1294us; 1311us; 1328us; 1345us; 1362us; 1379us; 1396us; 1413us; 1430us; 1447us; 1464us; 1481us; 1498us; 1515us; 1532us; 1549us; 1566us; 1568us; 1585us; 1602us; 1603us; 1605us; 1622us; 1639us; 1640us; 1642us; 1659us; 1660us; 1661us; 1678us; 1695us; 1696us; 1700us; 1702us; 1703us; 1707us; 1710us; 1711us; 1720us; 1722us; 1723us; 1740us; 1741us; 1742us; 1759us; 1760us; 1761us; 1762us; 1764us; 1765us; 1766us; 1767us; 1768us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 5us; 9us; 7us; 7us; 4us; 5us; 7us; 5us; 5us; 1us; 1us; 1us; 2us; 2us; 2us; 2us; 3us; 4us; 2us; 2us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 5us; 3us; 3us; 6us; 6us; 4us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 5us; 5us; 5us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 10us; 10us; 10us; 11us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 13us; 14us; 14us; 14us; 15us; 15us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 17us; 17us; 17us; 18us; 18us; 18us; 18us; 18us; 19us; 19us; 20us; 20us; 21us; 21us; 21us; 21us; 22us; 22us; 22us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 16394us; 65535us; 16395us; 65535us; 65535us; 65535us; 65535us; 65535us; 16396us; 65535us; 65535us; 65535us; 16397us; 16399us; 65535us; 65535us; 16401us; 65535us; 65535us; 16402us; 65535us; 16404us; 65535us; 65535us; 16405us; 16406us; 65535us; 16407us; 65535us; 16408us; 65535us; 16409us; 65535us; 16410us; 16411us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16412us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16413us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 16418us; 16419us; 16420us; 16421us; 65535us; 65535us; 16423us; 65535us; 16424us; 16425us; 16426us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16430us; 65535us; 65535us; 65535us; 65535us; 16433us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16452us; 65535us; 65535us; 65535us; 16453us; 65535us; 65535us; 16454us; 16455us; 65535us; 65535us; 16456us; 65535us; 65535us; 16458us; 65535us; 65535us; 16459us; 65535us; 65535us; 16461us; 65535us; 16462us; 16464us; 65535us; 16466us; 16467us; 16468us; 65535us; 16469us; 16470us; 16471us; 16472us; 16473us; |]
let _fsyacc_reductions ()  =    [| 
# 518 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 527 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 46 "CPar.fsy"
                                                               Prog _1 
                   )
# 46 "CPar.fsy"
                 : Absyn.program));
# 538 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 51 "CPar.fsy"
                                                               [] 
                   )
# 51 "CPar.fsy"
                 : 'gentype_Topdecs));
# 548 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 52 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 52 "CPar.fsy"
                 : 'gentype_Topdecs));
# 560 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 56 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 56 "CPar.fsy"
                 : 'gentype_Topdec));
# 571 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 57 "CPar.fsy"
                                                               _1 
                   )
# 57 "CPar.fsy"
                 : 'gentype_Topdec));
# 582 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 75 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 75 "CPar.fsy"
                 : 'gentype_Vardec));
# 594 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 86 "CPar.fsy"
                 : 'gentype_Vardesc));
# 605 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 94 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 94 "CPar.fsy"
                 : 'gentype_Vardesc));
# 616 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "CPar.fsy"
                                                               _2                                      
                   )
# 96 "CPar.fsy"
                 : 'gentype_Vardesc));
# 627 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 98 "CPar.fsy"
                 : 'gentype_Vardesc));
# 638 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 100 "CPar.fsy"
                 : 'gentype_Vardesc));
# 650 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 105 "CPar.fsy"
                 : 'gentype_Fundec));
# 663 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 107 "CPar.fsy"
                 : 'gentype_Fundec));
# 677 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "CPar.fsy"
                                                               [] 
                   )
# 112 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 687 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "CPar.fsy"
                                                               _1 
                   )
# 113 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 698 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "CPar.fsy"
                                                               [_1]     
                   )
# 117 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 709 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 118 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 721 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "CPar.fsy"
                                                               Block _2 
                   )
# 123 "CPar.fsy"
                 : 'gentype_Block));
# 732 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "CPar.fsy"
                                                               [] 
                   )
# 127 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 742 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 128 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 754 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 129 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 766 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "CPar.fsy"
                                                               _1 
                   )
# 133 "CPar.fsy"
                 : 'gentype_Stmt));
# 777 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "CPar.fsy"
                                                               _1 
                   )
# 134 "CPar.fsy"
                 : 'gentype_Stmt));
# 788 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 138 "CPar.fsy"
                 : 'gentype_StmtM));
# 799 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "CPar.fsy"
                                                               Return None          
                   )
# 139 "CPar.fsy"
                 : 'gentype_StmtM));
# 809 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 140 "CPar.fsy"
                 : 'gentype_StmtM));
# 820 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "CPar.fsy"
                                                               _1                   
                   )
# 141 "CPar.fsy"
                 : 'gentype_StmtM));
# 831 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 142 "CPar.fsy"
                 : 'gentype_StmtM));
# 844 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 143 "CPar.fsy"
                 : 'gentype_StmtM));
# 856 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "CPar.fsy"
                                                                       For(_3, _5, _7, _9)
                   )
# 144 "CPar.fsy"
                 : 'gentype_StmtM));
# 870 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "CPar.fsy"
                                                               DoWhile(_2, _5)      
                   )
# 145 "CPar.fsy"
                 : 'gentype_StmtM));
# 882 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_CaseStmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "CPar.fsy"
                                                                        Switch(_3, _6) 
                   )
# 146 "CPar.fsy"
                 : 'gentype_StmtM));
# 894 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "CPar.fsy"
                                                                          [Case(_2,_4)] 
                   )
# 150 "CPar.fsy"
                 : 'gentype_CaseStmt));
# 906 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_CaseStmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "CPar.fsy"
                                                                          Case(_2,_4) :: _5
                   )
# 152 "CPar.fsy"
                 : 'gentype_CaseStmt));
# 919 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 155 "CPar.fsy"
                 : 'gentype_StmtU));
# 932 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 156 "CPar.fsy"
                 : 'gentype_StmtU));
# 944 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 157 "CPar.fsy"
                 : 'gentype_StmtU));
# 956 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "CPar.fsy"
                                                               Access _1           
                   )
# 161 "CPar.fsy"
                 : 'gentype_Expr));
# 967 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "CPar.fsy"
                                                               _1                  
                   )
# 162 "CPar.fsy"
                 : 'gentype_Expr));
# 978 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "CPar.fsy"
                                                               _1                  
                   )
# 166 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 989 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "CPar.fsy"
                                                               SelfInc _1          
                   )
# 167 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1000 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "CPar.fsy"
                                                               SelfDec _1          
                   )
# 168 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1011 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "CPar.fsy"
                                                               SelfInc _2          
                   )
# 169 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1022 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "CPar.fsy"
                                                               SelfDec _2          
                   )
# 170 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1033 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 171 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1045 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 172 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1057 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 173 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1068 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 174 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1079 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 175 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1089 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 176 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1101 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 177 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1113 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 178 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1125 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 179 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1137 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 180 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1149 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                               PlusAssign(_1, _3)  
                   )
# 181 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1161 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CPar.fsy"
                                                               MinusAssign(_1, _3) 
                   )
# 182 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1173 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                               DivAssign(_1, _3) 
                   )
# 183 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1185 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "CPar.fsy"
                                                               MultiplyAssign(_1, _3) 
                   )
# 184 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1197 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 185 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1209 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 186 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1221 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 187 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1233 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 188 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1245 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 189 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1257 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 190 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1269 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "CPar.fsy"
                                                               Prim3(_1, _3, _5)   
                   )
# 191 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1282 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 192 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1294 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 193 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1306 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "CPar.fsy"
                                                               Max(_3, _5)         
                   )
# 194 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1318 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "CPar.fsy"
                                                               Min(_3, _5)         
                   )
# 195 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1330 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "CPar.fsy"
                                                               Abs(_3)             
                   )
# 196 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1341 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 "CPar.fsy"
                                                               CstI _1             
                   )
# 204 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1352 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 "CPar.fsy"
                                                               _2                  
                   )
# 205 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1363 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 "CPar.fsy"
                                                               Addr _2             
                   )
# 206 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1374 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "CPar.fsy"
                                                               AccVar _1           
                   )
# 210 "CPar.fsy"
                 : 'gentype_Access));
# 1385 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 "CPar.fsy"
                                                               _2                  
                   )
# 211 "CPar.fsy"
                 : 'gentype_Access));
# 1396 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 212 "CPar.fsy"
                 : 'gentype_Access));
# 1407 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 213 "CPar.fsy"
                 : 'gentype_Access));
# 1418 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 214 "CPar.fsy"
                 : 'gentype_Access));
# 1430 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "CPar.fsy"
                                                               []       
                   )
# 218 "CPar.fsy"
                 : 'gentype_Exprs));
# 1440 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "CPar.fsy"
                                                               _1       
                   )
# 219 "CPar.fsy"
                 : 'gentype_Exprs));
# 1451 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 "CPar.fsy"
                                                               [_1]     
                   )
# 223 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1462 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 224 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1474 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "CPar.fsy"
                                                               _1       
                   )
# 228 "CPar.fsy"
                 : 'gentype_Const));
# 1485 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "CPar.fsy"
                                                               _1       
                   )
# 229 "CPar.fsy"
                 : 'gentype_Const));
# 1496 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 230 "CPar.fsy"
                                                               - _2     
                   )
# 230 "CPar.fsy"
                 : 'gentype_Const));
# 1507 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 "CPar.fsy"
                                                               -1       
                   )
# 231 "CPar.fsy"
                 : 'gentype_Const));
# 1517 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 235 "CPar.fsy"
                                                               TypI     
                   )
# 235 "CPar.fsy"
                 : 'gentype_Type));
# 1527 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 "CPar.fsy"
                                                               TypC     
                   )
# 236 "CPar.fsy"
                 : 'gentype_Type));
# 1537 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 237 "CPar.fsy"
                                                               TypB    
                   )
# 237 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1548 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 59;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
